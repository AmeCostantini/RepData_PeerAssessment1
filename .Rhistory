install.packages("swirl")
install.packages("swirl")
library("swirl")
swirl()
install_from_swirl("Data_Analysis")
install_from_swirl("Mathematical_Biostatistics_Boot_Camp")
install_from_swirl("Open_Intro/Overview_of_Statistics")
install_from_swirl("Regression_Models")
library("swirl")
swirl()
install.packages(ggplot2)
install.packages("ggplot2")
library(ggplot2)
knit2html("/Users/Americo/Documents/Education/Data_science/Coursera/reproducible_research/project/RepData_PeerAssessment1/PA1_template_files/PA1_template.Rmd")
knit2html("/Users/Americo/Documents/Education/Data_science/Coursera/reproducible_research/project/RepData_PeerAssessment1/PA1_template_files/PA1_template.Rmd")
library("knitr")
knit2html("/Users/Americo/Documents/Education/Data_science/Coursera/reproducible_research/project/RepData_PeerAssessment1/PA1_template_files/PA1_template.Rmd")
library("knitr")
knit2html("/Users/Americo/Documents/Education/Data_science/Coursera/reproducible_research/project/RepData_PeerAssessment1/PA1_template_files/PA1_template.Rmd")
setwd("/Users/Americo/Documents/Education/Data_science/Coursera/reproducible_research/project/RepData_PeerAssessment1")
act1<-read.csv("activity.csv")
library(xtable)
library(grid)
library(gridExtra)
library(ggplot2)
library(plyr)
library(dplyr)
#grouping the dataframe to sum the steps on a daily basis
act1_agg1<-group_by(subset(act1,!is.na(steps)), date)
act1_agg2<-summarise(act1_agg1,
steps_per_each_day=sum(steps))
head(act1_agg2)
#calculating mean and median
steps_mean<-mean(act1_agg2$steps_per_each_day)
steps_mean<-round(steps_mean, digits=2)
steps_median<-median(act1_agg2$steps_per_each_day)
#plotting the histogram with a vertical line for the mean
g1<-ggplot(data=act1_agg2, aes(x=steps_per_each_day))+
geom_histogram(color="black", fill="blue", binwidth=500)+
geom_vline(xintercept=mean(act1_agg2$steps_per_each_day), color="green")+
scale_x_continuous(breaks=seq(0, max(act1_agg2$steps_per_each_day), 1000))+
scale_y_discrete(breaks=seq(0,10,1))+
ggtitle("steps taken each day")
print(g1)
#grouping the dataframe by interval
act1_agg_int<-group_by(subset(act1,!is.na(steps)), interval)
act1_agg_int2<-summarise(act1_agg_int,
mean_steps_per_int=mean(steps))
#calculating the mean
act1_agg_int2$mean_steps_per_int<-round(act1_agg_int2$mean_steps_per_int, digits=2)
#creating a different interval (see the printed subset of the output)
act1_agg_int2$interval2<-seq(0,5*287, 5)
head(act1_agg_int2$interval2, 50)
#now i divide this values by 60
act1_agg_int2$interval3<-act1_agg_int2$interval2/60
head(act1_agg_int2, 25)
#plotting
g2<-ggplot(data=act1_agg_int2, aes(x=interval3, y=mean_steps_per_int))+
geom_line()+
scale_x_continuous(breaks=seq(0, 24.0, .5))+
ggtitle("mean of steps taken in each interval")
print(g2)
max_steps_int<-act1_agg_int2[which.max(act1_agg_int2$mean_steps_per_int),]
print(max_steps_int)
act1_notNA<-merge(x = act1, y = act1_agg_int2, by = "interval", all.x=TRUE)
act1_notNA<-act1_notNA[order(act1_notNA$date,act1_notNA$interval),]
head(act1_notNA)
act1_notNA$steps_notNA<-ifelse(is.na(act1_notNA$steps), act1_agg_int2$mean_steps_per_int, act1_notNA$steps)
head(act1_notNA)
row.names=FALSE
act2<-subset(act1_notNA, select=c(steps_notNA, date, interval))
act2<-data.frame(act2, row.names=NULL)
library("reshape")
act2<-rename(act2,c(steps_notNA="steps"))
head(act2)
Sys.setlocale("LC_TIME","en_US")
library("lubridate")
act2$date2 <- ymd(act2$date)
class(act2$date2)
#with an ifelse condition I create the factor variable day_type to distinguish the weekdays from the weekend ones
act2$day_type<-ifelse(weekdays(act2$date2)=="Sunday"|weekdays(act2$date2)=="Saturday", "weekend day", "weekday")
act2$day_type<-factor(act2$day_type)
head(act2)
act2$interval2<-seq(0,287*5,5)/60
act2$interval3<-round(act2$interval2, digits=2)
head(act2)
#step2: calculating mean  grouping the dataframe
act2_agg_int1<-group_by(act2, interval3, day_type)
act2_agg_int1$steps<-round(act2_agg_int1$steps, digits=2)
act2_agg_int2<-summarise(act2_agg_int1,
steps_mean=mean(steps))
act2_agg_int2$steps_mean<-round(act2_agg_int2$steps_mean, digits=2)
head(act2_agg_int2)
#step3: plotting
ggplot(data=act2_agg_int2, aes(x=interval3, y=steps_mean))+
geom_line()+
scale_x_discrete(breaks=seq(0,24,.5))+
facet_grid(day_type~.)+
ggtitle("pattern in weekdays and weekand days")
by(act2_agg_int2$steps_mean, act2_agg_int2$day_type, summary)
by(act2_agg_int2$steps_mean, act2_agg_int2$day_type, sum)
library("knitr")
knit2html("/Users/Americo/Documents/Education/Data_science/Coursera/reproducible_research/project/RepData_PeerAssessment1/PA1_template_files/PA1_template.Rmd")
library("knitr")
knit2html("/Users/Americo/Documents/Education/Data_science/Coursera/reproducible_research/project/RepData_PeerAssessment1/PA1_template.Rmd")
